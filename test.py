import telebot;
bot = telebot.TeleBot('-----------------------------------------------') # token bots
from telebot import types
import sqlite3

conn = sqlite3.connect('database.db', check_same_thread=False) #db/
cursor = conn.cursor()


name = ''
surname = ''
age = 0
country =''


@bot.message_handler(commands=['start'])
def start(message):
    namber = message.from_user.id
    if message.text =='/start':
        for reg_value in cursor.execute("SELECT id_user from test"):
            if namber in reg_value:
                 markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                 button_menu = types.KeyboardButton('–ú–µ–Ω—é')
                 markup.add(button_menu) #add button
                 bot.send_message(message.from_user.id,'–ü—Ä–∏–≤–µ—Ç, {0.first_name}!'.format(message.from_user), reply_markup=markup)
            else:
                 markup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
                 hellopbtn = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ")
                 markup.add(hellopbtn)
                 bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç ".format(message.from_user), reply_markup=markup)


def db_table_val(id_user: int ,user_name: str, user_surname: str, user_country: str, user_age: int, user_id_name: str ):#—á—Ç–æ –±—É–¥–µ–º –∑–∞–ø–æ–º–Ω–∏—Ç–∞—Ç—å 
	cursor.execute('INSERT INTO test (id_user, user_name, user_surname, user_country, user_age, user_id_name) VALUES (?, ?, ?, ?, ?, ?)', (id_user, user_name, user_surname, user_country, user_age, user_id_name))
	conn.commit()   

@bot.message_handler(content_types=['text'])
def func(message):
    us_id = message.from_user.id
    
    
    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ' :
         bot.send_message(message.from_user.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
         
         bot.register_next_step_handler(message, get_name); #—Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name
    elif message.text == '–î–∞ - —ç—Ç–æ —è':

         #database insert
         db_table_val(id_user=us_id, user_name=name, user_surname=surname, user_country=country, user_age=age, user_id_name= message.chat.first_name) #database insert
         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
         button_menu = types.KeyboardButton('–ú–µ–Ω—é')
         markup.add(button_menu) #add button
         bot.send_message(message.from_user.id,'–Ø –∑–∞–ø–æ–º–Ω–∏–ª, –∞ —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–π–¥–µ–º –≤ –º–µ–Ω—é', reply_markup=markup)
    elif message.text == '–ú–µ–Ω—é':

         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
         button_senior = types.KeyboardButton('–ê–≤—Ç–æ—Ä üßë‚Äçüíª')
         button_morefunc= types.KeyboardButton('–ë–æ–ª—å—à–µ üéÆ')
         button_resume = types.KeyboardButton('–ú–æ–µ —Ä–µ–∑—é–º–µ üóø')
         button_other= types.KeyboardButton('–ú–æ–π Git ü§ì')
         markup.add(button_senior, button_morefunc, button_other, button_resume) #add button
         bot.send_message(message.from_user.id,'<<<< ‚ùå –ú–µ–Ω—é ‚ùå >>>>', reply_markup=markup)


    elif message.text == '–ù–µ—Ç, —ç—Ç–æ –Ω–µ —è':
        bot.send_message(message.from_user.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(message, get_name); #—Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name
    elif message.text == '–ê–≤—Ç–æ—Ä üßë‚Äçüíª':
        bot.send_message(message.from_user.id, '–ö–æ–Ω—Ç–∞–∫—Ç —Å –∞–≤—Ç–æ—Ä–æ–º –ø–æ ' + '[—Å—Å—ã–ª–∫–µ](https://t.me/MikitaMi)', parse_mode='Markdown')
    elif message.text == '–ë–æ–ª—å—à–µ üéÆ':
        bot.send_message(message.from_user.id, "–ó–¥–µ—Å—å –±—É–¥—É—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤\n –ê –ø–æ–∫–∞ –º–æ–∂–Ω–æ –≥–ª—è–Ω—É—Ç—å –∏–≥—Ä—ã –≤ GP " + '[–¢—ã–∫](https://play.google.com/store/apps/developer?id=BrainStormStudio)', parse_mode='Markdown')
    elif message.text == '–ú–æ–µ —Ä–µ–∑—é–º–µ üóø':
        bot.send_message(message.from_user.id, '–°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–µ —Ä–µ–∑—é–º–µ –ø–æ ' + '[—Å—Å—ã–ª–∫–µ](https://hh.ru/resume/c21588f6ff06b38fbc0039ed1f4d6b32505978)', parse_mode='Markdown')
    elif message.text == '–ú–æ–π Git ü§ì':
        bot.send_message(message.from_user.id, '–°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π –≥–∏—Ç –ø–æ ' + '[—Å—Å—ã–ª–∫–µ](https://github.com/Nikittos-dev?tab=repositories)', parse_mode='Markdown')




def get_name(message): #–ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é
    global name
    name = message.text
    bot.send_message(message.from_user.id, '–ö–∞–∫–∞—è —É –≤–∞—Å —Ñ–∞–º–∏–ª–∏—è?')
    bot.register_next_step_handler(message, get_surname)

def get_surname(message):
    global surname
    surname = message.text
    bot.send_message(message.from_user.id, '–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?')
    bot.register_next_step_handler(message, get_age)

def get_age(message):
    global age
    while age == 0: #–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è
        try:
             age = int(message.text) #–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ            
        except Exception:
             bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')
             bot.register_next_step_handler(message, get_age)
             break
        bot.send_message(message.from_user.id, '–û—Ç–∫—É–¥–∞ –≤—ã?')
        bot.register_next_step_handler(message, get_country)
    
              
def get_country(message):
    global country        
    country = message.text   

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_yes = types.KeyboardButton('–î–∞ - —ç—Ç–æ —è')
    button_no= types.KeyboardButton('–ù–µ—Ç, —ç—Ç–æ –Ω–µ —è')
    markup.add(button_yes, button_no) #add button
    question = '–¢–µ–±–µ '+str(age)+' –ª–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç '+name+' '+surname+ ' –∏ –≤—ã –∏–∑ '+ country+ '?'

    bot.send_message(message.from_user.id, text=question, reply_markup=markup)
    



bot.polling(none_stop=True, interval=0) # –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä c –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º.

'''
    elif message.text == '/help': # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        

        
            bot.send_message(message.from_user.id, '–í–æ—Ç —á—Ç–æ —è —É–º–µ—é: \n–ú–æ–∂–µ–º –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ /reg')
       
            bot.send_message(message.from_user.id, '–í–æ—Ç —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å: \n–ü–µ—Ä–µ–π–¥–µ–º –≤ –º–µ–Ω—é /–ú–µ–Ω—é')

    
    elif message.text == '/reg': # –¥–æ–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!!!!!!!!!!!!!!!
         bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è :)\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
         bot.register_next_step_handler(message, get_name); #—Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name

    else:
         bot.send_message(message.from_user.id, '–î–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ /help'); # cheak to true     
'''
